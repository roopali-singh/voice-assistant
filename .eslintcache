[{"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Output.js":"1","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Popups.js":"2","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\index.js":"3","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\StartButton.js":"4","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Circle.js":"5","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\App.js":"6","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Home.js":"7","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Weather.js":"8","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Page.js":"9","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\reportWebVitals.js":"10"},{"size":22019,"mtime":1635857851241,"results":"11","hashOfConfig":"12"},{"size":4505,"mtime":1635857423782,"results":"13","hashOfConfig":"12"},{"size":507,"mtime":1609007396273,"results":"14","hashOfConfig":"12"},{"size":974,"mtime":1635849604407,"results":"15","hashOfConfig":"12"},{"size":316,"mtime":1635856412620,"results":"16","hashOfConfig":"12"},{"size":258,"mtime":1635857001204,"results":"17","hashOfConfig":"12"},{"size":561,"mtime":1635856458252,"results":"18","hashOfConfig":"12"},{"size":839,"mtime":1609019531117,"results":"19","hashOfConfig":"12"},{"size":343,"mtime":1635856667033,"results":"20","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1sn5m3k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Output.js",["45","46","47","48"],"import React, { useEffect, useState } from \"react\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\nimport \"./Output.css\";\r\nimport random from \"utils.random\";\r\n\r\nfunction Output() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis();\r\n\r\n  useEffect(() => {\r\n    if (supported == false) {\r\n      return \"Browser does not support Web Speech API. Please download latest Chrome.\";\r\n    } else {\r\n      speak({\r\n        text: message,\r\n        default: true,\r\n        lang: \"en-US\",\r\n        localService: true,\r\n        name: \"Microsoft Zira Desktop - English (United States)\",\r\n        voiceURI: \"Microsoft Zira Desktop - English (United States)\",\r\n      });\r\n    }\r\n    console.log(message);\r\n    console.log(speaking);\r\n    console.table(voices);\r\n  }, [message]);\r\n\r\n  // function say() {\r\n  //   speak({ text: message });\r\n  // }\r\n\r\n  const commands = [\r\n    // CONVO.s\r\n    // NAMING in convo.\r\n    {\r\n      command: \"My name is *\",\r\n      callback: (name) => {\r\n        resetTranscript();\r\n        // const word = [\"Hi\", `${name}`, `Hello ${name}`];\r\n        setMessage(`Hi ${name}. How you land up here?`);\r\n        // setMessage(random(word));\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"I am *\",\r\n      callback: (name) => {\r\n        resetTranscript();\r\n        setMessage(`Hi ${name}. Nice name`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Hello\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        const words = [\"Hi\", \"Hello\", \"Bonjour\"];\r\n        setMessage(random(words));\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      matchInterim: true,\r\n    },\r\n    {\r\n      command: \"(What's) (What is) your name\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(\"My name's Aether\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      matchInterim: true,\r\n    },\r\n    {\r\n      command: \"Who are you\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(\"I'm your voice assistant\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      matchInterim: true,\r\n    },\r\n    // OTHERS in convo\r\n    {\r\n      command: \"Ok\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(\"Need something else..\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Good\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(\"Glad that you like it.\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      matchInterim: true,\r\n    },\r\n    {\r\n      command: \"Thank you\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(\"My Pleasure\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      matchInterim: true,\r\n    },\r\n    {\r\n      // DATE AND TIME\r\n      command: \"What time is it\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(new Date().toLocaleTimeString());\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      matchInterim: true,\r\n    },\r\n    {\r\n      command: \"What is the date (today)\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(new Date().toLocaleDateString());\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      matchInterim: true,\r\n    },\r\n    {\r\n      // TELLING THE DAY OF DATE\r\n      command: \"(What's) (What) (was) (will be) the day on *\",\r\n      callback: (date) => {\r\n        resetTranscript();\r\n        let thatDay, day;\r\n        var options = { weekday: \"long\" };\r\n        thatDay = new Date(`${date}`);\r\n        day = new Intl.DateTimeFormat(\"en-US\", options).format(thatDay);\r\n        let timeline = thatDay < new Date() ? \"was\" : \"will be\";\r\n        setMessage(`On ${date}, it ${timeline} ${day}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      // matchInterim: true,\r\n    },\r\n    {\r\n      //ALARM CLOCK\r\n      command: \"Set alarm for *:*a.m.\",\r\n      callback: (hour, minute) => {\r\n        resetTranscript();\r\n        let today = new Date();\r\n        today.setHours(`${hour}`);\r\n        today.setMinutes(`${minute}`);\r\n        setMessage(`Setting alarm for ${today}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n        console.log(today);\r\n\r\n        var ring = new Audio(\r\n          \"https://imagesforwebsite.netlify.app/MusicPlaylist/1.mp3\"\r\n        );\r\n\r\n        function ringBell() {\r\n          ring.play();\r\n        }\r\n\r\n        function setAlarm() {\r\n          // e.preventDefault();\r\n          let alarmTime = new Date(`${today}`);\r\n          let now = new Date();\r\n          console.log(now);\r\n          console.log(alarmTime);\r\n\r\n          let timeToAlarm = alarmTime - now;\r\n          console.log(timeToAlarm);\r\n          if (timeToAlarm >= 0) {\r\n            setTimeout(() => {\r\n              ringBell();\r\n            }, timeToAlarm);\r\n          }\r\n        }\r\n        setAlarm();\r\n      },\r\n      // matchInterim: true,\r\n    },\r\n    {\r\n      // MUSIC\r\n      command: \"Play music\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        toPlayMusic();\r\n        setMessage(\"Enjoy\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Stop music\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        toStopMusic();\r\n        setMessage(\"Your Wish\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n      isFuzzyMatch: true,\r\n      fuzzyMatchingThreshold: 0.8,\r\n    },\r\n    {\r\n      command: \"Show (the) playlist\",\r\n      callback: () => {\r\n        resetTranscript();\r\n\r\n        setMessage(\r\n          <ul>\r\n            <li>Slow Hands by Niall Horan</li>\r\n            <li>Mine by Taylor Swift</li>\r\n            <li>Nit Nit by Jasleen Royal</li>\r\n            <li>Ours by Taylor Swift</li>\r\n            <li>Night Changes by One Direction</li>\r\n            <li>History by One Direction</li>\r\n            <li>One Thing by One Direction</li>\r\n            <li>This Town by Niall Horan</li>\r\n            <li>The Night We Met by Lord Huron</li>\r\n            <li>Not Today by Imagine Dragons</li>\r\n            <li>Bad Liar by Imagine Dragons</li>\r\n            <li>All I Want by Kodaline</li>\r\n            <li>Udd Gaye by Ritviz</li>\r\n            <li>War by Jay Sean</li>\r\n            <li>In The End by Linkin Park</li>\r\n            <li>2002 by Anne-Marie</li>\r\n            <li>Who Says by Selena Gomez & The Scene</li>\r\n            <li>Party In The U.S.A. by Miley Cyrus</li>\r\n          </ul>\r\n        );\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n\r\n    {\r\n      //GOOGLE, YOUTUBE, WIKI, SPOTIFY, GMAIL, G.ACCOUNT\r\n      command: \"Open google\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        function openGoogle() {\r\n          window.open(\"https://www.google.co.in/\", \"_blank\");\r\n        }\r\n        openGoogle();\r\n        setMessage(\"Go Google!\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Open youtube\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        function openYoutube() {\r\n          window.open(\"https://www.youtube.com/\", \"_blank\");\r\n        }\r\n        openYoutube();\r\n        setMessage(\"Go Youtube!\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Open wikipedia\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        function openWikipedia() {\r\n          window.open(\"https://www.wikipedia.org/\", \"_blank\");\r\n        }\r\n        openWikipedia();\r\n        setMessage(\"Go Wikipedia!\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Open spotify\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        function openWikipedia() {\r\n          window.open(\"https://www.spotify.com/in/\", \"_blank\");\r\n        }\r\n        openWikipedia();\r\n        setMessage(\"Go Spotify!\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Open Gmail\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        function openGmail() {\r\n          window.open(\"https://mail.google.com/mail/u/0/?tab=rm&ogbl#inbox\");\r\n        }\r\n        openGmail();\r\n        setMessage(\"Here you go !\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"(Open) (my) (the) Google Account\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        function openGoogleAccount() {\r\n          window.open(\"https://myaccount.google.com/?tab=kk\");\r\n        }\r\n        openGoogleAccount();\r\n        setMessage(\"ok\");\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      // GOOGLING, YOUTUBING, WIKIKING (search)\r\n      command: \"Search * on google\",\r\n      callback: (gitem) => {\r\n        resetTranscript();\r\n        function toGoogle() {\r\n          window.open(`http://google.com/search?q=${gitem}`, \"_blank\");\r\n        }\r\n        toGoogle();\r\n        setMessage(`Okay. Googling ${gitem}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Google *\",\r\n      callback: (gitem) => {\r\n        resetTranscript();\r\n        function toGoogle() {\r\n          window.open(`http://google.com/search?q=${gitem}`, \"_blank\");\r\n        }\r\n        toGoogle();\r\n        setMessage(`Okay. Googling ${gitem}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Search * on youtube\",\r\n      callback: (yitem) => {\r\n        resetTranscript();\r\n        function toYoutube() {\r\n          window.open(\r\n            `https://www.youtube.com/results?search_query=${yitem}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n        toYoutube();\r\n        setMessage(`${yitem}. Here you go.`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Search * on wikipedia\",\r\n      callback: (witem) => {\r\n        resetTranscript();\r\n        function toWiki() {\r\n          window.open(`https://en.wikipedia.org/wiki/${witem}`, \"_blank\");\r\n        }\r\n        toWiki();\r\n        setMessage(`Searching ${witem} on Wiki`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Some random knowledge on wikipedia\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        function toWiki() {\r\n          window.open(\"https://en.wikipedia.org/wiki/Special:Random\", \"_blank\");\r\n        }\r\n        toWiki();\r\n        setMessage(`Okay`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Search * on wiki\",\r\n      callback: (witem) => {\r\n        resetTranscript();\r\n        function toWiki() {\r\n          window.open(`https://en.wikipedia.org/wiki/${witem}`, \"_blank\");\r\n        }\r\n        toWiki();\r\n        setMessage(`Searching ${witem} on Wiki`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    // FOR UNSPLASH IMAGES\r\n    {\r\n      command: \"Search for * images\",\r\n      callback: (image) => {\r\n        resetTranscript();\r\n        function toUnsplash() {\r\n          window.open(`https://unsplash.com/s/photos/${image}`, \"_blank\");\r\n        }\r\n        toUnsplash();\r\n        setMessage(`Images for ${image}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      // CALCULATOR\r\n      command: \"Add * and *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 + num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* + *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 + num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* plus *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 + num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* - *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 - num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* minus *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 - num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* / *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 / num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* divided by *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        let divide = num1 / num2;\r\n        setMessage(`The answer is: ${divide.toFixed(3)}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* x *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 * num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* X *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n\r\n        setMessage(`The answer is: ${num1 * num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* multiply by *\",\r\n      callback: (numa, numb) => {\r\n        resetTranscript();\r\n        const num1 = parseInt(numa, 10);\r\n        const num2 = parseInt(numb, 10);\r\n        setMessage(`The answer is: ${num1 * num2}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      // CUBE & SQUARE ROOT, EXPONENTIAL, RANDOM NUMBER (shaould add LOGS with base e & 10 ?!)\r\n      command: \"Square root of *\",\r\n      callback: (num) => {\r\n        resetTranscript();\r\n        setMessage(`The answer is: ${Math.sqrt(num).toFixed(3)}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Cube root of *\",\r\n      callback: (num) => {\r\n        resetTranscript();\r\n        setMessage(`The answer is: ${Math.cbrt(num).toFixed(3)}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* raised to the power (of) *\",\r\n      callback: (x, y) => {\r\n        resetTranscript();\r\n        setMessage(`The answer is: ${Math.pow(x, y)}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"* raise to the power (of) *\",\r\n      callback: (x, y) => {\r\n        resetTranscript();\r\n        setMessage(`The answer is: ${Math.pow(x, y)}`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      command: \"Tell me a random number\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        setMessage(`${Math.random().toFixed(3)} is a nice number`);\r\n\r\n        console.log(message);\r\n        // say();\r\n      },\r\n    },\r\n    {\r\n      // WEATHER\r\n      command: \"(What's the) (What is the)(Weather) (temperature) in *\",\r\n      callback: (city) => {\r\n        resetTranscript();\r\n        fetch(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=YOUR_API_KEY`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            displayWeather(data);\r\n          });\r\n\r\n        function displayWeather(data) {\r\n          const { name } = data;\r\n          const { description } = data.weather[0];\r\n          const { temp } = data.main;\r\n          // console.log(name, description, temp);\r\n          setMessage(\r\n            `In ${name} it's currently ${temp}°C with ${description} there`\r\n          );\r\n        }\r\n      },\r\n    },\r\n    // QUOTES AND JOKES\r\n    {\r\n      command: \"Tell (me) a (random) quote\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        fetch(\"https://api.quotable.io/random\")\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            displayQuote(data);\r\n          });\r\n\r\n        function displayQuote(data) {\r\n          const { content } = data;\r\n          const { author } = data;\r\n          setMessage(`The quote is by ${author}, ${content}`);\r\n        }\r\n      },\r\n    },\r\n    // COVID UPDATES AND VACCINES\r\n    {\r\n      command: \"Coronavirus (cases) (updates) in *\",\r\n      callback: (country) => {\r\n        resetTranscript();\r\n        let countryCase = country.charAt(0).toUpperCase() + country.slice(1);\r\n        fetch(\r\n          `https://covid-api.mmediagroup.fr/v1/cases?country=${countryCase}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            displayCovidCases(data);\r\n          });\r\n        function displayCovidCases(data) {\r\n          const { confirmed } = data.All;\r\n          const { recovered } = data.All;\r\n          setMessage(\r\n            `In ${countryCase}, Total cases: ${confirmed.toLocaleString(\r\n              \"en-IN\",\r\n              {\r\n                maximumFractionDigits: 2,\r\n              }\r\n            )} and Recovered Cases: ${recovered.toLocaleString(\"en-IN\", {\r\n              maximumFractionDigits: 2,\r\n            })}`\r\n          );\r\n        }\r\n      },\r\n    },\r\n    {\r\n      command: \"Coronavirus (cases) (updates) in delhi\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        fetch(\"https://covid-api.mmediagroup.fr/v1/cases?country=India\")\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            displayCovidCases(data);\r\n          });\r\n        function displayCovidCases(data) {\r\n          const { confirmed } = data.Delhi;\r\n          const { recovered } = data.Delhi;\r\n          setMessage(\r\n            `In Delhi, Total cases: ${confirmed.toLocaleString(\"en-IN\", {\r\n              maximumFractionDigits: 2,\r\n            })} and Recovered Cases: ${recovered.toLocaleString(\"en-IN\", {\r\n              maximumFractionDigits: 2,\r\n            })}`\r\n          );\r\n        }\r\n      },\r\n    },\r\n    {\r\n      command: \"(Vaccine) (Vaccines) (updates) in *\",\r\n      callback: (country) => {\r\n        resetTranscript();\r\n        let countryCase = country.charAt(0).toUpperCase() + country.slice(1);\r\n        fetch(\r\n          `https://covid-api.mmediagroup.fr/v1/vaccines?country=${countryCase}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            displayCovidVaccines(data);\r\n          });\r\n        function displayCovidVaccines(data) {\r\n          const { people_vaccinated } = data.All;\r\n          setMessage(\r\n            `In ${countryCase}, Total no. of people vaccinated: ${people_vaccinated.toLocaleString(\r\n              \"en-IN\",\r\n              {\r\n                maximumFractionDigits: 2,\r\n              }\r\n            )}`\r\n          );\r\n        }\r\n      },\r\n    },\r\n    // SENDING MAIL\r\n    {\r\n      command: \"Send (a) (mail) (email) with subject * and content *\",\r\n      callback: (subject, content) => {\r\n        resetTranscript();\r\n        function toMail() {\r\n          // let eAddress = address.replace(\"dot\", \".\");\r\n          window.open(\r\n            `https://mail.google.com/mail/u/0/?fs=1&tf=cm&source=mailto&su=${subject}&body=${content}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n        toMail();\r\n        setMessage(`${subject}. Here you go.`);\r\n\r\n        console.log(message);\r\n      },\r\n    },\r\n    {\r\n      // CLEAR or STOP.\r\n      command: \"clear\",\r\n      callback: () => {\r\n        resetTranscript();\r\n        cancel();\r\n      },\r\n      isFuzzyMatch: true,\r\n      fuzzyMatchingThreshold: 0.2,\r\n    },\r\n    // {\r\n    //   // CLEAR or STOP.\r\n    //   command: \"stop\",\r\n    //   callback: () => {\r\n    //     SpeechRecognition.abortListening();\r\n    //   },\r\n    //   matchInterim: true,\r\n    // },\r\n  ];\r\n\r\n  // MUSIC FUNCTIONS DEFINED\r\n  const audioPlayer = document.querySelector(\"audio\");\r\n  function toPlayMusic() {\r\n    audioPlayer.play();\r\n    audioPlayer.style.display = \"block\";\r\n  }\r\n  function toStopMusic() {\r\n    audioPlayer.pause();\r\n    audioPlayer.style.display = \"none\";\r\n  }\r\n\r\n  //MUSIC PLAYER\r\n\r\n  var i = 1;\r\n  var nextSong = \"\";\r\n  function playMusic() {\r\n    i++;\r\n    nextSong = \"/MusicPlaylist/\" + i + \".mp3\";\r\n    // audioPlayer = document.getElementById(\"audio\");\r\n    audioPlayer.src = nextSong;\r\n    audioPlayer.load();\r\n    audioPlayer.play();\r\n    if (i == 18) {\r\n      // this is the end of the songs.\r\n      i = 1;\r\n    }\r\n  }\r\n\r\n  const { transcript, resetTranscript } = useSpeechRecognition({ commands });\r\n  return (\r\n    <div className=\"output\">\r\n      <div className=\"output__output\">\r\n        {/* onChange={} */}\r\n        <p className=\"output_lines\">{transcript}</p>\r\n        <p className=\"output_lines\">{message}</p>\r\n      </div>\r\n      <audio\r\n        className=\"audio\"\r\n        // src={\"/MusicPlaylist/\" + i + \".mp3\"}\r\n        src=\"/MusicPlaylist/1.mp3\"\r\n        controls=\"controls\"\r\n        // autoplay=\"autoplay\"\r\n        align=\"\"\r\n        onEnded={playMusic}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Output;\r\n","C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Popups.js",["49","50","51","52","53","54","55","56"],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\index.js",[],["57","58"],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\StartButton.js",[],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Circle.js",[],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\App.js",[],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Home.js",[],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Weather.js",[],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\Page.js",[],"C:\\Users\\91959\\Desktop\\voiceAssistant\\aether\\src\\reportWebVitals.js",[],["59","60"],{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":14,"column":19,"nodeType":"67","messageId":"68","endLine":14,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":29,"column":6,"nodeType":"71","endLine":29,"endColumn":15,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"66","line":806,"column":11,"nodeType":"67","messageId":"68","endLine":806,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":16,"column":11,"nodeType":"75","endLine":16,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":36,"column":11,"nodeType":"75","endLine":36,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":71,"column":11,"nodeType":"75","endLine":71,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":106,"column":11,"nodeType":"75","endLine":106,"endColumn":37},{"ruleId":"76","severity":1,"message":"77","line":111,"column":46,"nodeType":"78","endLine":111,"endColumn":61},{"ruleId":"76","severity":1,"message":"77","line":116,"column":17,"nodeType":"78","endLine":116,"endColumn":32},{"ruleId":"76","severity":1,"message":"77","line":122,"column":17,"nodeType":"78","endLine":122,"endColumn":32},{"ruleId":"76","severity":1,"message":"77","line":128,"column":17,"nodeType":"78","endLine":128,"endColumn":32},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},"no-unused-vars","'SpeechRecognition' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'speak', 'speaking', 'supported', and 'voices'. Either include them or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],{"desc":"88","fix":"89"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [message, speak, speaking, supported, voices]",{"range":"90","text":"91"},[926,935],"[message, speak, speaking, supported, voices]"]